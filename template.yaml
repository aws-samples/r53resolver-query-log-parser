AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for Route 53 Resolver DNS Query log processing
Parameters: 
  DDBMaliciousDomainsTable:
    Description: DynamoDB Table to store list of malicious domains
    Default: malicious-domains-table
    Type: String
  DDBTableRCU:
    Description: DynamoDB Table Read Capacity Units 
    Type: Number
    Default: 50
  DDBTableWCU:
    Description: DynamoDB Table Write Capacity Units 
    Type: Number
    Default: 50
  S3DNSLogsBucketName:
    Description: Name for the S3 bucket for DNS Query Logs output
    Type: String
    Default: dns_logs_output
    MinLength: 3
    MaxLength: 63
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
  S3MaliciousDomainsFilePath: 
    Description: Name of file that contains malicious domain, including extension, example /folder1/subfolder/allowedlist.txt
    Default: malicious_list_config/all_malicious_domains.txt
    Type: String
    MinLength: 4
    MaxLength: 63
    AllowedPattern: ^[a-zA-Z0-9!_.*'()-]+(\/[a-zA-Z0-9!_.*'()-]+)*$
  StreamProcessorMemorySize:
    Description: Memmory allocation for Stream Processing Lambda Function
    Default: 256
    Type: Number
  StreamProcessorTimeout:
    Description: Timeout for Stream Processing Lambda Function
    Default: 120
    Type: Number
  StreamOutput3Prefix:
    Type: String
    Default: dns_query_logs/!{timestamp:yyyy/MM/dd}
    Description: S3 prefix for Kinesis output
  StreamOutputErrorPrefix:
    Type: String
    Default: dns_query_logs/!{timestamp:yyyy/MM/dd}
    Description: S3 prefix for Kinesis output
    Default: delivery-failures/!{firehose:error-output-type}/!{timestamp:yyyy/MM/dd}
  StreamOutputCompressionFormat:
    Description: Compression that Firehose will use to output logs to S3
    Type: String
    Default: GZIP
    AllowedValues: [GZIP]
  StreamBufferingInterval:
    Description: Amount of time that Firehose will wait to output logs to S3
    Type: Number
    Default: 60
    MinValue: 60
    MaxValue: 900
  StreamBufferSize:
    Description: Amount of logs data that Firehose will buffer before outputting 
    Type: Number
    Default: 1
    MinValue: 1
    MaxValue: 128
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 900
Resources:
  # DynamoDB table to store list of malicious domains
  MaliciousDomainsDynamoDBTable: 
    Type: AWS::Serverless::SimpleTable
    Properties: 
      TableName: !Ref DDBMaliciousDomainsTable
      PrimaryKey: 
        Name: domainName
        Type: String
      ProvisionedThroughput: 
        ReadCapacityUnits: !Ref DDBTableRCU
        WriteCapacityUnits: !Ref DDBTableWCU
  # S3 Bucket for storing list of malicious domains as well as for FH to store the logs
  DNSLogsDeliveryBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Ref S3DNSLogsBucketName
  # Lambda Function that will be invoked by Firehose and in turn will check if queried domain is malicious
  StreamInlineProcessingFunction:
    Type: AWS::Serverless::Function
    FunctionName: RT53-KinesisStreamDNSLogsProcessor
    Properties:
      CodeUri: stream_processor/
      Handler: stream_processor.lambda_handler
      Runtime: python3.7
      Timeout: !Ref StreamProcessorTimeout
      MemorySize: !Ref StreamProcessorMemorySize
      Environment:
        Variables:
          MALICIOUS_DOMAINS_TABLE: !Ref DDBMaliciousDomainsTable
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref DDBMaliciousDomainsTable
      
  
  DeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    DependsOn:
      - DNSLogsFirehosePolicy
    Properties:
      ExtendedS3DestinationConfiguration:
        BucketARN: !Sub 'arn:aws:s3:::${DNSLogsDeliveryBucket}'
        BufferingHints:
          IntervalInSeconds: !Ref StreamBufferingInterval
          SizeInMBs: 50
        CompressionFormat: !Ref StreamOutputCompressionFormat
        Prefix: !Ref StreamOutput3Prefix
        ErrorOutputPrefix: !Ref StreamOutputErrorPrefix
        RoleARN: !GetAtt DNSLogsFirehoseRole.Arn
        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Parameters:
                - ParameterName: LambdaArn
                  ParameterValue: !GetAtt StreamInlineProcessingFunction.Arn 
              Type: Lambda   
  
  
  DNSLogsFirehoseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref 'AWS::AccountId'

  DNSLogsFirehosePolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref DNSLogsFirehoseRole
      PolicyName: firehose_delivery_policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:AbortMultipartUpload'
              - 's3:GetBucketLocation'
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:ListBucketMultipartUploads'
              - 's3:PutObject'
            Resource:
              - !GetAtt DNSLogsDeliveryBucket.Arn
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref DNSLogsDeliveryBucket
                  - '*'
          - Effect: Allow
            Action:
              - 'lambda:InvokeFunction'
              - 'lambda:GetFunctionConfiguration'
            Resource:
              - !GetAtt StreamInlineProcessingFunction.Arn
  

  # Function to import list of maliciuos domains and store them in DynamoDB table 
  ImportBlockedListFunc:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    FunctionName: RT53-BlockedDomainsImporter
    Properties:
      CodeUri: import_malicious_list/
      Handler: import_malicious_list.lambda_handler
      Runtime: python3.7
      Environment:
        Variables:
          S3_BUCKET_MALICOUS_DOMAINS: !Ref S3DNSLogsBucketName
          S3_OBJECT_MALICIOUS_DOMAINS: !Ref S3MaliciousDomainsFilePath
          MALICIOUS_DOMAINS_TABLE: !Ref DDBMaliciousDomainsTable
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref DDBMaliciousDomainsTable
      - S3ReadPolicy:
          BucketName: !Ref S3DNSLogsBucketName
  
  
  
 
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  
  ImportBlockedListFunctionOutput:
    Description: "ImportBlockedListFunc Lambda Function ARN"
    Value: !GetAtt ImportBlockedListFunc.Arn
  StreamInlineProcessingFunctionOutput:
    Description: "Lambda Function used by Firehose to check if domains are malicious or not"
    Value: !GetAtt StreamInlineProcessingFunction.Arn
  KinesisFirehosestreamARNOutput:
    Description: "Kinesis Firehose Delivery Stream for DNS Logs"
    Value: !GetAtt DeliveryStream.Arn
  DynamoDBTableOutput:
    Description: "DynamoDB table for maintaining list of malicious domains"
    Value: !Ref MaliciousDomainsDynamoDBTable
  S3BucketDNSLogsOutput:
    Description: "S3 Bucket where DNS Logs are stored"
    Value: !Ref DNSLogsDeliveryBucket
  
  